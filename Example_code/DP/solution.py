"""
식량 창고 arr가 주어질 때, 각 원소의 값은 식량 창고에 저장된 식량의 양을 의미한다.
여기서, 이 식량 창고를 털고자 하는데 연속된 창고를 털 수 없다.
가능한 경우의 수 중 가장 많은 식량을 털 수 있는 양은 몇인가?

문제는 다음과 같이 쪼개질 수 있다.
식량 창고의 수가 K일 때,
    - 맨 앞 창고를 턴다 -> 이러면 맨 앞에서 세 번째 창고부터 털 수 있다.
    - 맨 앞 창고를 털지 않는다 -> 이러면 맨 앞에서 두 번째 창고부터 털 수 있다.
따라서, 점화식을 다음과 같이 세울 수 있다.
    - DP[i] = max(arr[i] + DP[i - 2], DP[i - 1])
"""
arr = [1, 3, 1, 5]

K = 4
DP = [0] * K
DP[1] = arr[1]
DP[2] = max(arr[1], arr[2])

for i in range(3, K):
    DP[i] = max(
        arr[i] + DP[i - 2],
        DP[i - 1]
    )

print(DP[K - 1])